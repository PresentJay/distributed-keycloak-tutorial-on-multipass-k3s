apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-data
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgresql
spec:
  selector:
    app: keycloak-postgresql
  type: NodePort
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-postgresql
  labels:
    app: keycloak-postgresql
spec:
  serviceName: keycloak-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-postgresql
  template:
    metadata:
      labels:
        app: keycloak-postgresql
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 20
      containers:
#######################
# TODO: set resources #
#######################
#        resources:
#          requests:
#          memory: "64Mi"
#          cpu: "250m"
#        limits:
#          memory: "128Mi"
#          cpu: "500m"
#######################
        - name: keycloak-postgresql
          image: postgres:13-alpine
          imagePullPolicy: "IfNotPresent"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: keycloak-postgresql-data
              subPath: data
          envFrom:
            - configMapRef:
                name: keycloak-postgresql-config
          command: ["/bin/sh", "-c"]
          args:
            - |
              sysctl -w fs.inotify.max_user_instances=99999999
              docker-entrypoint.sh postgres
      volumes:
      - name: keycloak-postgresql-data
        persistentVolumeClaim:
          claimName: keycloak-data
          